services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"
    volumes:
      - .:/backend
    ports:
      - "8080:8080"
    expose:
      - 8080
    networks:
      - nw
    depends_on:
      - db
    restart: always
    env_file:
      - ./.env

  db:
    image: postgres:latest
    volumes:
      - qbdata:/var/lib/postgresql/data
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5431:5432"
    networks:
      - nw

  redis:
    image: redis:alpine
    ports:
      - "6377:6378"
    expose:
      - 6377
    networks:
      - nw

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A quicksamachar worker -E -l INFO
    volumes:
      - .:/backend
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - backend
    networks:
      - nw
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A quicksamachar beat -l INFO
    volumes:
      - .:/backend
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - backend
    networks:
      - nw
    restart: always

volumes:
  qbdata:

networks:
  nw:
    driver: bridge
